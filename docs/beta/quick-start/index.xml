<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quick-starts on MongoDB Swift Driver</title>
    <link>http://docs.openkitten.org/quick-start/index.xml</link>
    <description>Recent content in Quick-starts on MongoDB Swift Driver</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Dec 2016 12:36:56 +0000</lastBuildDate>
    <atom:link href="http://docs.openkitten.org/quick-start/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Quick Start</title>
      <link>http://docs.openkitten.org/quick-start/quick-start/</link>
      <pubDate>Wed, 14 Dec 2016 12:36:56 +0000</pubDate>
      
      <guid>http://docs.openkitten.org/quick-start/quick-start/</guid>
      <description>

&lt;h1 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h1&gt;

&lt;p&gt;This guide will show you how to set up a simple application using Swift Package Manager and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the &lt;a href=&#34;http://docs.openkitten.org/tutorials/mongokitten/tutorials/&#34;&gt;tutorials&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-the-package-swift-file&#34;&gt;Create the package.swift file&lt;/h2&gt;

&lt;p&gt;First, create a directory where your application will live.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir myproject
cd myproject
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enter the following command and answer the questions to create the initial structure for your new project:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swift package init --type executable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, install the driver dependency.&lt;/p&gt;

&lt;p&gt;Add this to your &lt;code&gt;Package.swift&lt;/code&gt; for the stable version&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.Package(url: &amp;quot;https://github.com/OpenKitten/MongoKitten.git&amp;quot;, majorVersion: 4)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Fetch the dependencies&lt;/p&gt;

&lt;p&gt;&lt;code&gt;swift package fetch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should see &lt;strong&gt;SPM&lt;/strong&gt; download a lot of files. Once it&amp;rsquo;s done you&amp;rsquo;ll find all the downloaded packages under the &lt;strong&gt;Packages&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;To generate Xcode project&lt;/p&gt;

&lt;p&gt;&lt;code&gt;swift package generate-xcodeproj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And &lt;code&gt;import MongoKitten&lt;/code&gt; in your project.&lt;/p&gt;

&lt;h2 id=&#34;start-a-mongodb-server&#34;&gt;Start a MongoDB Server&lt;/h2&gt;

&lt;p&gt;For complete MongoDB installation instructions, see &lt;a href=&#34;https://docs.mongodb.org/manual/installation/&#34;&gt;the manual&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the right MongoDB version from &lt;a href=&#34;https://www.mongodb.org/downloads&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a database directory (in this case under &lt;strong&gt;/data&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;Install and start a &lt;code&gt;mongod&lt;/code&gt; process.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;mongod --dbpath=/data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see the &lt;strong&gt;mongod&lt;/strong&gt; process start up and print some status information.&lt;/p&gt;

&lt;h2 id=&#34;connect-to-mongodb&#34;&gt;Connect to MongoDB&lt;/h2&gt;

&lt;p&gt;Add code to connect to the server and the database &lt;strong&gt;tutorial&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let server = try Server(&amp;quot;mongodb://localhost:27017&amp;quot;)
let database = server[&amp;quot;tutorial&amp;quot;]

if server.isConnected {
    print(&amp;quot;Connected successfully to server&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build your app from the command line with :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;swift build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run your app from the command line with :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./.build/debug/myproject
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The application should print &lt;strong&gt;Connected successfully to server&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>