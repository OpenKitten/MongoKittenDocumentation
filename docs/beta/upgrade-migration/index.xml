<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Upgrade-migrations on MongoDB Swift Driver</title>
    <link>http://docs.openkitten.org/upgrade-migration/index.xml</link>
    <description>Recent content in Upgrade-migrations on MongoDB Swift Driver</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Dec 2016 12:36:56 +0000</lastBuildDate>
    <atom:link href="http://docs.openkitten.org/upgrade-migration/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Upgrade Guide</title>
      <link>http://docs.openkitten.org/upgrade-migration/upgrade-migration/</link>
      <pubDate>Wed, 14 Dec 2016 12:36:56 +0000</pubDate>
      
      <guid>http://docs.openkitten.org/upgrade-migration/upgrade-migration/</guid>
      <description>

&lt;h1 id=&#34;migrating-to-mongokitten-4&#34;&gt;Migrating to MongoKitten 4&lt;/h1&gt;

&lt;p&gt;This guide will help users of MongoKitten 1.x, 2.x and 3.x to migrate to 4.x&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;The connection URL supports &lt;code&gt;authSource&lt;/code&gt;, &lt;code&gt;authMechanism&lt;/code&gt;, &lt;code&gt;ssl&lt;/code&gt;, Replica Sets and Sharded Clusters. But if you prefer not using an URL you still can.&lt;/p&gt;

&lt;p&gt;MongoKitten 4 has an object &amp;ldquo;ClientSettings&amp;rdquo; which separates out the settings from the server.&lt;/p&gt;

&lt;p&gt;ClientSettings accepts one or more hosts. Multiple hosts should only be used for replica sets and sharded databases.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ClientSettings(host: ...)&lt;/code&gt; accepts a MongoHost. Which is manually creatable but is initializable using a String (literal).&lt;/p&gt;

&lt;p&gt;The String needs to be formatted like this:
&lt;code&gt;subdomain.example.com:12345&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The ClientSettings then accepts &lt;code&gt;sslSettings&lt;/code&gt;. sslSettings is an object that has 3 values. One for enabling or disabling SSL. The other 2 are for certificate and host validation.&lt;/p&gt;

&lt;p&gt;SSLSettings is ExpressibleByBooleanLiteral, so &lt;code&gt;true&lt;/code&gt; will enable SSL with secure defaults. &lt;code&gt;false&lt;/code&gt; will not use SSL.&lt;/p&gt;

&lt;p&gt;Last but not least ClientSettings accepts login details in the form of &lt;code&gt;MongoCredentials&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This accepts a username, password and database. If you don&amp;rsquo;t know the authentication database (it&amp;rsquo;s not always the same database as the one you&amp;rsquo;re trying to access) you can leave it empty wil &lt;code&gt;nil&lt;/code&gt; here.&lt;/p&gt;

&lt;h3 id=&#34;connecting&#34;&gt;Connecting&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;automatically&lt;/code&gt; parameter has been removed. MongoKitten will always connect automatically now and will always attempt to reconnect.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;server.connect()&lt;/code&gt; has been removed for the same reason.&lt;/p&gt;

&lt;h2 id=&#34;documents-and-values&#34;&gt;Documents and Values&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;~&lt;/code&gt; operator has been removed because Values are now directly embeddable inside Documents/Dictionary literals.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let name = &amp;quot;Joannis&amp;quot;

let doc: Document = [
  &amp;quot;name&amp;quot; ~name,
  &amp;quot;name2&amp;quot;: &amp;quot;Joannis&amp;quot;
  &amp;quot;subDoc&amp;quot;: [
    &amp;quot;name&amp;quot;: ~name
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will become&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let name = &amp;quot;Joannis&amp;quot;

let doc: Document = [
  &amp;quot;name&amp;quot; name,
  &amp;quot;name2&amp;quot;: &amp;quot;Joannis&amp;quot;
  &amp;quot;subDoc&amp;quot;: [
    &amp;quot;name&amp;quot;: name
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;subscripting&#34;&gt;Subscripting&lt;/h3&gt;

&lt;p&gt;Document subscripts can be chained in MongoKitten 4.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bool(doc[&amp;quot;subdoc&amp;quot;][&amp;quot;boolean&amp;quot;])&lt;/code&gt; will get the value called &amp;ldquo;boolean&amp;rdquo; inside &amp;ldquo;subdoc&amp;rdquo; and will return a boolean if it&amp;rsquo;s representable as one, nil otherwise.
&lt;code&gt;String(doc[&amp;quot;_id&amp;quot;])&lt;/code&gt; will try to convert the value to a String. So &lt;code&gt;Int(3)&lt;/code&gt; will become &lt;code&gt;&amp;quot;3&amp;quot;&lt;/code&gt;. A String will stay a String, and ObjectIds will represent themselves as a hexadecimal String.&lt;/p&gt;

&lt;h3 id=&#34;collection-insertion&#34;&gt;Collection insertion&lt;/h3&gt;

&lt;p&gt;Collection now feels more like a sequence, so inserting has been simplified.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try collection.insert(contentsOf: [
    userJoannisDocument, userLaurentDocument, userRobbertDocument
  ])
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>